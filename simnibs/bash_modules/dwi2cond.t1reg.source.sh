
# check for mri2mesh or headreco output files
if [ ! -d $M2M_DIR ]; then e echo "ERROR: Directory $M2M_DIR doesn't exist or is not readable! Did you run mri2mesh or headreco before?"; exit; fi
for i in {$M2M_DIR/T1fs_conform.nii.gz,$M2M_DIR/T1fs_nu_conform.nii.gz,$M2M_DIR/gm.nii.gz,$M2M_DIR/wm.nii.gz}; do
     if [ ! -f $i ]; then 
       e echo "ERROR: Input file '$i' doesn't exist. Did you run mri2mesh or headreco?"
       exit 1
     fi
done


# registration to structural T1
############################################
  e echo "registering results to T1fs_conform"
  OLD_PWD=`pwd`
  if [ ! -d $DTICONF_DIR ]; then e mkdir $DTICONF_DIR; fi
  e2 cd $DTICONF_DIR

# create T1 brain mask
  if [ -f $M2M_DIR'/mri2mesh_log.html' ]; then
    e echo 'head mesh was generated by mri2mesh'
    e fslmaths $M2M_DIR/gm -add $M2M_DIR/cerebellum -dilM -ero -bin -fillh T1_brainmask
    e fslmaths $M2M_DIR/T1fs_nu_conform -mas T1_brainmask T1_brain
    e fslmaths T1_brainmask -sub $M2M_DIR/ventricles -bin T1_bmask_woVentr

    e fslmaths $M2M_DIR/gm -add $M2M_DIR/cerebellum -add $M2M_DIR/wm -sub $M2M_DIR/ventricles T1_brainrim_QA # for QA
    e fslmaths T1_brainrim_QA -edge -thr 0.3 -bin T1_brainrim_QA
  elif [ -f $M2M_DIR'/headreco_log.html' ]; then
    e echo 'head mesh was generated by headreco'
    e fslmaths $M2M_DIR/gm T1_brainmask
    e fslmaths $M2M_DIR/T1fs_nu_conform -mas T1_brainmask T1_brain
    e fslmaths T1_brainmask T1_bmask_woVentr

    e fslmaths $M2M_DIR/gm -add $M2M_DIR/wm T1_brainrim_QA # for QA
    e fslmaths T1_brainrim_QA -edge -thr 0.3 -bin T1_brainrim_QA 
  else
    e echo "ERROR: Neither mri2mesh nor headreco used for T1 segmentation!?"
    exit 1
  fi


# registration
  FLIRTDOF=12
  if [ $T1REGMTHD == '6dof' ]; then
	e echo 'using 6 DOF'
        FLIRTDOF=6
  fi

  e fslmaths $M2M_DIR/T1fs_conform -bin -s 1 T1fs_conform-mask
  e fslcpgeom T1_brain T1fs_conform-mask # work around:
  # in rare occasions, the dimensions of the two images seem not to be fully identical (header information
  # is the same when comparing manually; maybe some spurious differences in later digits?) so that flirt
  # throws an exception unless header information is copied
  e flirt -in $DTIRAW_DIR/DTI_FA -ref T1_brain -refweight T1fs_conform-mask -omat FA2T1.mat -dof $FLIRTDOF
  if [ $T1REGMTHD == 'nonl' ]; then
    e echo 'using nonlinear registration'
    e fnirt --in=$DTIRAW_DIR/DTI_FA --ref=T1_brain --aff=FA2T1.mat --cout=FA2T1_warp --subsamp=8,4,2,2
    e vecreg -i $DTIRAW_DIR/DTI_tensor -o DTI_conf_tensor -r T1_brain -w FA2T1_warp
  else
    e vecreg -i $DTIRAW_DIR/DTI_tensor -o DTI_conf_tensor -r T1_brain -t FA2T1.mat
  fi
  e fslmaths DTI_conf_tensor -tensor_decomp DTI_conf

  # apply T1 brainmask
  for i in {FA,L1,L2,L3,V1,V2,V3,MD,tensor}; do
    e fslmaths DTI_conf_$i -mas T1_brainmask DTI_conf_$i
  done
  e rm DTI_conf.* 


# preparing some results for QA
  e flirt -in $DTIRAW_DIR/DTI_FA -ref T1_brain -refweight T1fs_conform-mask -omat FA2T1_QA.mat -out DTI_FA_6dof_QA -dof 6
  e fslmaths DTI_FA_6dof_QA -mas T1_brainmask DTI_FA_6dof_QA
  if [ -f $DTIRAW_DIR/DTI_sse.nii.gz ]; then 
    e flirt -in $DTIRAW_DIR/DTI_sse -ref T1_brain -applyxfm -init FA2T1_QA.mat -out DTI_SSE_6dof_QA
    e flirt -in $DTIRAW_DIR/nodif_brain -ref T1_brain -applyxfm -init FA2T1_QA.mat -out DTI_nodif_6dof_QA

    e fslmaths DTI_SSE_6dof_QA -mas T1_brainmask DTI_SSE_6dof_QA
    e fslmaths DTI_nodif_6dof_QA -mas T1_brainmask DTI_nodif_6dof_QA
  fi

  if [ -d $RAW_DIR ]; then
    e flirt -in $RAW_DIR/DWIraw_FA -ref T1_brain -refweight T1fs_conform-mask -omat FA2T1_QA.mat -out DTIraw_FA_6dof_QA -dof 6
    e flirt -in $RAW_DIR/DWIraw_SSE -ref T1_brain -applyxfm -init FA2T1_QA.mat -out DTIraw_SSE_6dof_QA
    e flirt -in $RAW_DIR/nodif_brain -ref T1_brain -applyxfm -init FA2T1_QA.mat -out DTIraw_nodif_6dof_QA

    e fslmaths DTIraw_FA_6dof_QA -mas T1_brainmask DTIraw_FA_6dof_QA
    e fslmaths DTIraw_SSE_6dof_QA -mas T1_brainmask DTIraw_SSE_6dof_QA
    e fslmaths DTIraw_nodif_6dof_QA -mas T1_brainmask DTIraw_nodif_6dof_QA
  fi

  e nii2msh -ev $DTICONF_DIR/DTI_conf_tensor.nii.gz $OLD_PWD/${SUBJECT}.msh $D2C_DIR/first_ev_for_check.msh

  e rm T1fs_conform-mask.* FA2T1_QA.mat
  e2 cd $OLD_PWD
